Description: A small company FridayHITT provide customised different HITT
  training every Friday with running routes local to your location. They have
  approached you to design a mini network for the online presence. They can see
  that the company will expand rapidly so they want the design to be extensible
  from the start. They know that applying good practices from the start will
  make this easier. Provide appropriate services and documentation to get them
  going.

Parameters:

  KeyPairName:
    Type: String
    Description: Key/Pair for instance
    Default: FridayHIITKeyPair

  TypeOfInstance:
    Description: "Specify the Instance Type."
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small

Mappings:
  AMIIDMap:
    eu-west-1:
      MyAMI1: "ami-00385a401487aefa4"
      MyAMI2: "ami-094054baa258aef8c"
    eu-west-2:
      MyAMI1: "ami-0d64bb532e0502c46"
      MyAMI2: "ami-094054baa258aef8c"
    eu-south-3:
      MyAMI1: "ami-00385a401487aefa4"
      MyAMI2: "ami-0d64bb532e0502c46"


Resources:
  # VPC
  FridayHITTVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: FridayHITTVPC

  # Subnets
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FridayHITTVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs eu-west-1
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FridayHITTVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select
        - 0
        - !GetAZs eu-west-1
      Tags:
        - Key: Name
          Value: PrivateSubNet
 
  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref FridayHITTVPC
    DependsOn: FridayHITTVPC  # Ensure that the VPC is created first

  #Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FridayHITTVPC
      Tags:
        - Key: Name
          Value: Public_RouteTable

  # Route in Public Route Table to allow internet traffic
  MainRouteTableInternetGatewayAttachement:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FridayHITTVPC
      Tags:
        - Key: Name
          Value: Private_RouteTable

  # Associate Private Subnet with Private Route Table
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet
  
  # Security Groups 

  # Security Group for public instances
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "public-security-group"
      GroupDescription: "Allow traffic inbound for ssh on public subnet and https and allow all outbound"
      VpcId: !Ref FridayHITTVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.1.0/24
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: public-security-group

  # Security Group for jump instances
  JumpBoxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "jumobox-security-group"
      GroupDescription: "Allow traffic only for SSH"
      VpcId: !Ref FridayHITTVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: jumpbox-security-group

  # Security Group for private instances
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "private-security-group"
      GroupDescription: "Allow traffic in from public subnet IP only"
      VpcId: !Ref FridayHITTVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: private-security-group

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  
  # EC2 Instances

  PublicInstance:
    Type: AWS::EC2::Instance
    DependsOn: PublicSecurityGroup
    Properties:
      SubnetId: !Ref PublicSubnet
      ImageId: !FindInMap [AMIIDMap, !Ref "AWS::Region", MyAMI1]
      InstanceType: !Ref TypeOfInstance
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref PublicSecurityGroup
      Tags:
        - Key: Name
          Value: public-instance
  
  JumpBoxInstance:
    Type: AWS::EC2::Instance
    DependsOn: JumpBoxSecurityGroup
    Properties:
      SubnetId: !Ref PublicSubnet
      ImageId: !FindInMap [AMIIDMap, !Ref "AWS::Region", MyAMI1]
      InstanceType: !Ref TypeOfInstance
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref JumpBoxSecurityGroup
      Tags:
        - Key: Name
          Value: jumpbox-instance

  PrivateInstance:
    Type: AWS::EC2::Instance
    DependsOn: PrivateSecurityGroup
    Properties:
      SubnetId: !Ref PrivateSubnet
      ImageId: !FindInMap [AMIIDMap, !Ref "AWS::Region", MyAMI1]
      InstanceType: !Ref TypeOfInstance
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref PrivateSecurityGroup
      AvailabilityZone: !Select
        - 0
        - !GetAZs eu-west-1
      Tags:
        - Key: Name
          Value: privateInstance